(in-package #:nervous-island.gui.shapes)

(defun %grenade (side fillp)
  ;; Body
  (v:centered-ellipse-path (* 0.0 side) (* -0.02 side)
                           (* 0.05 side)
                           (* 0.07 side))
  (v:rectangle (* -0.01 side) (* 0.052 side)
               (* 0.02 side) (* 0.01 side))
  (v:rectangle (* -0.02 side) (* 0.064 side)
               (* 0.04 side) (* 0.03 side))
  (v:move-to (* 0.022 side) (* 0.09 side))
  (v:line-to (* 0.042 side) (* 0.05 side))
  (v:line-to (* 0.032 side) (* 0.04 side))
  (v:line-to (* 0.022 side) (* 0.07 side))
  (when fillp (v:fill-path)))

(defun %bomb (side fillp)
  ;; Body
  (v:centered-circle-path (* -0.02 side) (* -0.02 side) (* 0.05 side))
  (when fillp (v:fill-path))
  ;; Fuse
  (v:move-to (* 0.0 side) (* 0.03 side))
  (v:quadratic-to (* 0.0 side) (* 0.05 side)
                  (* 0.03 side) (* 0.07 side))
  (v:line-to (* 0.03 side) (* 0.05 side))
  (v:quadratic-to (* 0.01 side) (* 0.05 side)
                  (* 0.01 side) (* 0.025 side))
  (v:line-to (* 0.0 side) (* 0.03 side))
  (when fillp (v:fill-path))

  ;; Sparks
  (let ((x (* 0.025 side)) (y (* 0.06 side))
        (offset (* 0.007 side)))
    (dotimes (i 6)
      (let ((angle (+ (* pi -11/16) (* (- i 1) pi 1/4))))
        (v:centered-circle-path (+ x (* 1/2 0.04 side (cos angle)))
                                (- y (* 1/2 0.04 side (sin angle)))
                                offset)
        (v:close-subpath)
        (when fillp (v:fill-path))))))

(defun bomb (&optional (side *side*) (fillp t))
  (v:with-graphics-state
    (v:set-rgba-fill 1 1 1 1)
    (v:set-rgba-stroke 1 1 1 1)
    (%bomb side fillp)))

(defun %push-back (side fillp)
  (when fillp (v:set-rgba-fill 1 1 1 1))
  (v:move-to 0 (* 0.08 side))
  (v:line-to (* 0.07 side) (* 0.02 side))
  (v:line-to (* -0.07 side) (* 0.02 side))
  (when fillp (v:fill-path))
  (v:rectangle (* -0.04 side) (* -0.015 side)
               (* 0.08 side) (* 0.03 side))
  (v:rectangle (* -0.04 side) (* -0.045 side)
               (* 0.08 side) (* 0.025 side))
  (v:rectangle (* -0.04 side) (* -0.07 side)
               (* 0.08 side) (* 0.02 side))
  (when fillp (v:fill-path)))

(defun %sniper (side fillp)
  (when fillp (v:set-rgba-fill 1 1 1 1))
  (v:centered-circle-path 0 0 (* 0.02 side))
  (v:close-subpath)
  (let ((magic (* 0.05 side 0.552284749831)))
    (dolist (signs '((1 1) (1 -1) (-1 1) (-1 -1)))
      (destructuring-bind (x y) signs
        (v:move-to (* x (* 0.05 side)) (* y (* 0.01 side)))
        (v:line-to (* x (* 0.06 side)) (* y (* 0.01 side)))
        (v:curve-to (* x (* 0.06 side)) (* y (+ (* 0.01 side) magic))
                    (* x (- (* 0.06 side) magic)) (* y (* 0.06 side))
                    (* x (* 0.01 side)) (* y (* 0.06 side)))
        (v:line-to (* x (* 0.01 side)) (* y (* 0.05 side)))
        (v:curve-to (* x (+ (* 0.01 side) magic)) (* y (* 0.05 side))
                    (* x (* 0.05 side)) (* y (- (* 0.05 side) magic))
                    (* x (* 0.05 side)) (* y (* 0.01 side))))))
  (v:move-to 0 0)
  (v:rectangle (* -0.005 side) (* 0.025 side)
               (* 0.01 side) (* 0.065 side))
  (v:rectangle (* 0.005 side) (* -0.025 side)
               (* -0.01 side) (* -0.065 side))
  (v:rectangle (* 0.025 side) (* 0.005 side)
               (* 0.065 side) (* -0.01 side))
  (v:rectangle (* -0.025 side) (* -0.005 side)
               (* -0.065 side) (* 0.01 side))
  (when fillp (v:fill-path)))
